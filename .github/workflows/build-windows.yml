name: Build Windows

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    name: Build Windows x86_64
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Node.js dependencies
        run: bun install

      - name: Build frontend
        run: bun run build

      - name: Build Tauri app
        run: bun run tauri build --target x86_64-pc-windows-msvc

      - name: Create artifacts directory
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist\windows-x86_64

          # Copy installers
          if (Test-Path "src-tauri\target\x86_64-pc-windows-msvc\release\bundle\msi\*.msi") {
            Copy-Item "src-tauri\target\x86_64-pc-windows-msvc\release\bundle\msi\*.msi" "dist\windows-x86_64\"
          }
          if (Test-Path "src-tauri\target\x86_64-pc-windows-msvc\release\bundle\nsis\*.exe") {
            Copy-Item "src-tauri\target\x86_64-pc-windows-msvc\release\bundle\nsis\*.exe" "dist\windows-x86_64\"
          }

          # Check if any files were copied
          $fileCount = (Get-ChildItem "dist\windows-x86_64" -File).Count
          if ($fileCount -eq 0) {
            Write-Error "No build artifacts found!"
            exit 1
          }

          # Generate checksums
          Get-ChildItem "dist\windows-x86_64" -File | ForEach-Object {
            $hash = Get-FileHash $_.FullName -Algorithm SHA256
            "$($hash.Hash.ToLower())  $($_.Name)" | Out-File -Append -FilePath "dist\windows-x86_64\checksums.txt" -Encoding utf8
          }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-x86_64
          path: dist/windows-x86_64/*